/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mule.ci.tool.app;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import mule.ci.tool.app.api.APIManagerAPICaller;
import mule.ci.tool.app.api.model.APIAssetsResponse;
import mule.ci.tool.app.util.AppException;
import mule.ci.tool.app.util.Const;

public class AppTest {

	// private static final Logger log = LoggerFactory.getLogger(AppTest.class);

	@Before
	public void setUp() {
		Const.init("config.yaml");
	}
	
	@Ignore @Test
	public void saveAPIInstance() throws AppException {
		App.createAPIInstance();
		// assertNotNull("app should have a greeting", classUnderTest.getGreeting());
	}

	@Ignore @Test
	public void deleteAPIInstance() throws AppException {
		APIAssetsResponse param = new APIManagerAPICaller().findAPIInstance();
		String environmentApiId = param.getId();
		App.deleteAPIInstance(environmentApiId);
	}
	
	@Ignore @Test
	public void checkAndCreateSLATiers() throws AppException {

		APIManagerAPICaller caller = new APIManagerAPICaller();
		APIAssetsResponse res = caller.findAPIInstance();
		App.checkAndCreateSLATiers(res.getId());
	}


	@Ignore @Test
	public void savePolicies() throws AppException {
		APIAssetsResponse param = new APIManagerAPICaller().findAPIInstance();
		String environmentApiId = param.getId();
		App.createPolicies(environmentApiId);
	}

	@Ignore @Test
	public void deletePolicies() throws AppException {
		APIManagerAPICaller caller = new APIManagerAPICaller();
		APIAssetsResponse res = caller.findAPIInstance();
		App.deletePolicies(res.getId());
	}
	
	@Ignore @Test
	public void checkAndSavePolicies() throws AppException {
		APIManagerAPICaller caller = new APIManagerAPICaller();
		APIAssetsResponse res = caller.findAPIInstance();
		App.checkAndCreatePolicies(res.getId());
	}
	
	@Ignore @Test
	public void checkAndCreateAlerts() throws AppException {
		APIManagerAPICaller caller = new APIManagerAPICaller();
		APIAssetsResponse res = caller.findAPIInstance();
		App.checkAndCreateAlerts(res.getId());
	}

	@Ignore @Test
	public void saveApplication() throws AppException {
		App.createApplication();
	}
	
	@Ignore @Test
	public void updateApplication() throws AppException {
		App.updateApplication();
	}

	@Ignore @Test
	public void saveRuntimeAlerts() throws AppException {
		App.createRuntimeAlerts();
	}

	@Ignore @Test
	public void deleteRuntimeAlerts() throws AppException {
		App.deleteRuntimeAlerts();
	}
}
